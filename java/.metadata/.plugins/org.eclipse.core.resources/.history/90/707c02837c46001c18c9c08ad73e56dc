package server;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;

public class ServerTask implements Runnable {
	// 현재 task에 등록된 client 정보
	Socket client;
	
	PrintWriter pw;    // client에게 메세지를 전달할 스트림
	BufferedReader br; // client에게 메세지를 전달받을 스트림
	String userID;	   // 현재 작업의 사용자 ID	
	
	// server로 부터 accept된 Client의 Socket정보를
	// 생성자의 매개변수로 전달 받음.
	public ServerTask(Socket client) {
		this.client = client;
		try {
			pw = new PrintWriter(
					new BufferedWriter(
						new OutputStreamWriter(
							client.getOutputStream()
						)
					), true // auto flush
				);
			br = new BufferedReader(
					new InputStreamReader(
							client.getInputStream()
							)
					);
			// ChatServer.serverPool.submit((Runnable)()->{});
			ChatServer.serverPool.submit(new Runnable() {
				@Override
				public void run() {
					while(true) {
						System.out.println("ID 입력대기");
						try {
							userID = br.readLine();
						} catch (IOException e) {}
						System.out.println(userID);
						ChatServer.ht.put(userID, pw);
						ChatServer.serverPool.submit(this);
						break;
					}
				}
			});
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	// message를 전달 받아 연결된 모든 사용자에게 메세지 전달
	public void brodCase(String message) {}
	
	// send(귓속말)
	// /w 아이디 메세지
	public void sendMsg(String message) {}

	// receive
	@Override
	public void run() {
	}

}
